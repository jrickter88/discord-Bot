{
  "//": "Platform limitations is due to lack of config.h files. See README.md for more information.",
  "_args": [
    [
      {
        "raw": "node-opus",
        "scope": null,
        "escapedName": "node-opus",
        "name": "node-opus",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\discord\\ss boty"
    ]
  ],
  "_from": "node-opus@latest",
  "_id": "node-opus@0.2.6",
  "_inCache": true,
  "_location": "/node-opus",
  "_nodeVersion": "7.0.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/node-opus-0.2.6.tgz_1491598903562_0.3691633266862482"
  },
  "_npmUser": {
    "name": "rantanen",
    "email": "jubjub@jubjubnest.net"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-opus",
    "scope": null,
    "escapedName": "node-opus",
    "name": "node-opus",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/node-opus/-/node-opus-0.2.6.tgz",
  "_shasum": "19cd2b99d98bcb1378607b9589841057f0c90590",
  "_shrinkwrap": null,
  "_spec": "node-opus",
  "_where": "C:\\discord\\ss boty",
  "author": {
    "name": "Mikko Rantanen",
    "email": "jubjub@jubjubnest.net"
  },
  "bugs": {
    "url": "https://github.com/Rantanen/node-opus/issues"
  },
  "cpu": [
    "x64",
    "arm",
    "ia32"
  ],
  "dependencies": {
    "bindings": "~1.2.1",
    "nan": "^2.3.2",
    "ogg-packet": "^1.0.0"
  },
  "description": "NodeJS native binding to OPUS",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "19cd2b99d98bcb1378607b9589841057f0c90590",
    "tarball": "https://registry.npmjs.org/node-opus/-/node-opus-0.2.6.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "5df232221744c47ffa3ac9f23b28e4aa251b383b",
  "gypfile": true,
  "homepage": "https://github.com/Rantanen/node-opus",
  "license": "MIT",
  "maintainers": [
    {
      "name": "rantanen",
      "email": "jubjub@jubjubnest.net"
    }
  ],
  "name": "node-opus",
  "optionalDependencies": {
    "ogg-packet": "^1.0.0"
  },
  "os": [
    "linux",
    "darwin",
    "win32",
    "freebsd"
  ],
  "readme": "node-opus\n=========\n### NodeJS native bindings to libopus\n\nThis module implements bindings for Opus v1.1 for Node.js.\n\n```js\nvar opus = require('node-opus');\n\n// Create the encoder.\n// Specify 48kHz sampling rate and 10ms frame size.\n// NOTE: The decoder must use the same values when decoding the packets.\nvar rate = 48000;\nvar encoder = new opus.OpusEncoder( rate );\n\n// Encode and decode.\nvar frame_size = rate/100;\nvar encoded = encoder.encode( buffer, frame_size );\nvar decoded = encoder.decode( encoded, frame_size );\n\n// or create streams\nvar channels = 2;\nvar opusEncodeStream = new opus.Encoder(rate, channels, frame_size);\nvar opusDecodeStream = new opus.Decoder(rate, channels, frame_size);\n// see examples folder for a more complete example\n```\n\nPlatform support\n----------------\n\nSupported platforms:\n- Linux x64 & ia32\n- Linux ARM (Raspberry Pi 1 & 2)\n- Mac OS X x64\n- Windows x64\n\n\nAdd new supported platforms by running ./autogen.sh and ./configure in\ndeps/opus and copying the resulting config.h to deps/config/opus/[os]/[arch].\n\nUse the following flags with configure:\n\n    ./configure --enable-static --disable-shared --with-pic\n\nOn a clean debian-based system, the full flow looks approximately like:\n\n\tsudo apt-get update\n\tsudo apt-get install autoconf\n\tsudo apt-get install libtool\n\tcd deps/opus\n\t./autogen.sh\n\t./configure --enable-static --disable-shared --with-pic\n\tmkdir -p ../config/opus/[os]/[arch]\n\tcp config.h ../config/opus/[os]/[arch]\n\nAnd, then, the last step is to add the OS/Arch to `package.json`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Rantanen/node-opus.git"
  },
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "version": "0.2.6"
}
